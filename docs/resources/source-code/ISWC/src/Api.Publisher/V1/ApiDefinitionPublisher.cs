//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace SpanishPoint.Azure.Iswc.Api.Publisher.V1
{
    using System = global::System;
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v11.0.0.0))")]
    public interface IISWC_SearchController
    {
        /// <summary>Publisher context search to find ISWC metadata</summary>
        /// <returns>Iswc metadata found</returns>
        System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<IPContextSearchResponse>> ContextSearchAsync(IPContextSearchModel body);
    
        /// <summary>Publisher context search to find ISWC metadata for multiple entries simultaneously</summary>
        /// <param name="body">Array of IP Context search objects</param>
        /// <returns>Iswc metadata found</returns>
        System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<System.Collections.Generic.ICollection<IPContextSearchResponseBatch>>> ContextSearchBatchAsync(System.Collections.Generic.IEnumerable<IPContextSearchModel> body);
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ISWC_SearchController : SpanishPoint.Azure.Iswc.Api.Publisher.Configuration.Swagger.BaseController
    {
        private IISWC_SearchController _implementation;
    
        public ISWC_SearchController(IISWC_SearchController implementation)
        {
            _implementation = implementation;
        }
    
        /// <summary>Publisher context search to find ISWC metadata</summary>
        /// <returns>Iswc metadata found</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("context/search", Name = "contextSearch")]
        public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<IPContextSearchResponse>> ContextSearch([Microsoft.AspNetCore.Mvc.FromBody] IPContextSearchModel body)
        {
            return _implementation.ContextSearchAsync(body);
        }
    
        /// <summary>Publisher context search to find ISWC metadata for multiple entries simultaneously</summary>
        /// <param name="body">Array of IP Context search objects</param>
        /// <returns>Iswc metadata found</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("context/search/batch", Name = "contextSearchBatch")]
        public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<System.Collections.Generic.ICollection<IPContextSearchResponseBatch>>> ContextSearchBatch([Microsoft.AspNetCore.Mvc.FromBody] System.Collections.Generic.IEnumerable<IPContextSearchModel> body)
        {
            return _implementation.ContextSearchBatchAsync(body);
        }
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ISWCMetadata : CommonSystemAttributes
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        /// <summary>Indicator of ISWC being preferred or provisional</summary>
        [Newtonsoft.Json.JsonProperty("iswcStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IswcStatus { get; set; }
    
        /// <summary>A CISAC code of a submitting agency that allocated this ISWC</summary>
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency { get; set; }
    
        /// <summary>Original title of a musical composition</summary>
        [Newtonsoft.Json.JsonProperty("originalTitle", Required = Newtonsoft.Json.Required.Always)]
        public string OriginalTitle { get; set; }
    
        /// <summary>Other titles associated with musical composition (aka alternative titles)</summary>
        [Newtonsoft.Json.JsonProperty("otherTitles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Title> OtherTitles { get; set; }
    
        /// <summary>Interested party associated with musical composition, such as :composers, lyricist, translator, original and sub publishers</summary>
        [Newtonsoft.Json.JsonProperty("interestedParties", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.List<InterestedParty> InterestedParties { get; set; } = new System.Collections.Generic.List<InterestedParty>();
    
        [Newtonsoft.Json.JsonProperty("works", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<VerifiedSubmission> Works { get; set; }
    
        /// <summary>A preferred ISWC of a parent of this ISWC. Presence of this field indicates that the ISWC merged to the parent.</summary>
        [Newtonsoft.Json.JsonProperty("parentISWC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ParentISWC { get; set; }
    
        /// <summary>All linked preferred ISWCs. Presence of this field indicates that those ISWCs merged to this ISWC.</summary>
        [Newtonsoft.Json.JsonProperty("linkedISWC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> LinkedISWC { get; set; }
    
        /// <summary>The preferred ISWC that is at the top of the chain of ISWCs.</summary>
        [Newtonsoft.Json.JsonProperty("overallParentISWC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OverallParentISWC { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ISWCMetadataBatch 
    {
        /// <summary>A unique identifier for this request. The same identifier will be populated for the ISWC Metadata request in the response.</summary>
        [Newtonsoft.Json.JsonProperty("searchId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SearchId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("searchResults", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ISWCMetadata> SearchResults { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rejection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rejection Rejection { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SubmissionResponse 
    {
        [Newtonsoft.Json.JsonProperty("verifiedSubmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VerifiedSubmission VerifiedSubmission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("linkedIswcs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<LinkedIswcs> LinkedIswcs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("potentialMatches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ISWCMetadata> PotentialMatches { get; set; }
    
        [Newtonsoft.Json.JsonProperty("multipleAgencyWorkCodes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MultipleAgencyWorkCodes> MultipleAgencyWorkCodes { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VerifiedSubmission : CommonSubmissionAttributes
    {
        /// <summary>An unique identifier assigned by the system</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public long Id { get; set; }
    
        /// <summary>A preferred ISWC assigned by the system</summary>
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.Always)]
        public object Iswc { get; set; }
    
        /// <summary>Indicator of a submitter being Iswc Eligible</summary>
        [Newtonsoft.Json.JsonProperty("iswcEligible", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IswcEligible { get; set; }
    
        /// <summary>Indicator of ISWC being preferred or provisional</summary>
        [Newtonsoft.Json.JsonProperty("iswcStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object IswcStatus { get; set; }
    
        /// <summary>Indicator of a submission being logically deleted on CSINET</summary>
        [Newtonsoft.Json.JsonProperty("deleted", Required = Newtonsoft.Json.Required.Always)]
        public bool Deleted { get; set; }
    
        /// <summary>The ISWC record that this is linked from</summary>
        [Newtonsoft.Json.JsonProperty("linkedFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LinkedFrom { get; set; }
    
        /// <summary>The ISWC record that this is linked to</summary>
        [Newtonsoft.Json.JsonProperty("linkedTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LinkedTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rejection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rejection Rejection { get; set; }
    
        /// <summary>The Archived ISWC</summary>
        [Newtonsoft.Json.JsonProperty("archivedIswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArchivedIswc { get; set; }
    
        /// <summary>The preferred ISWC that is at the top of the chain of ISWCs.</summary>
        [Newtonsoft.Json.JsonProperty("overallParentISWC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OverallParentISWC { get; set; }
    
        /// <summary>Data and time of creation in the system</summary>
        [Newtonsoft.Json.JsonProperty("createdDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; }
    
        /// <summary>Data and time of the latest update in the system</summary>
        [Newtonsoft.Json.JsonProperty("lastModifiedDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastModifiedDate { get; set; }
    
        /// <summary>Identifier of the last update in the system</summary>
        [Newtonsoft.Json.JsonProperty("lastModifiedBy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastModifiedBy { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VerifiedSubmissionBatch 
    {
        /// <summary>The value of the submissionID from the request submission.</summary>
        [Newtonsoft.Json.JsonProperty("submissionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SubmissionId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("submission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SubmissionResponse Submission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rejection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rejection Rejection { get; set; }
    
        [Newtonsoft.Json.JsonProperty("alternateIswcMatches", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AlternateIswcMatch> AlternateIswcMatches { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AlternateIswcMatch : CommonISWCMetadata
    {
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CommonSubmissionAttributes : CommonISWCMetadata
    {
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.Always)]
        public string Agency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("sourcedb", Required = Newtonsoft.Json.Required.Always)]
        public int Sourcedb { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workcode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Workcode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.Always)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CommonSubmissionAttributesCategory Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("disambiguation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Disambiguation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("disambiguationReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DisambiguationReason? DisambiguationReason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("disambiguateFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DisambiguateFrom> DisambiguateFrom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("bvltr", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public BVLTR? Bvltr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("derivedWorkType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DerivedWorkType? DerivedWorkType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("derivedFromIswcs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DerivedFrom> DerivedFromIswcs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("performers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Performer> Performers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("instrumentation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Instrumentation> Instrumentation { get; set; }
    
        /// <summary>Date and time when this metadata was created on CISNET</summary>
        [Newtonsoft.Json.JsonProperty("cisnetCreatedDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CisnetCreatedDate { get; set; }
    
        /// <summary>Date and time when this metadata last modified on CISNET</summary>
        [Newtonsoft.Json.JsonProperty("cisnetLastModifiedDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CisnetLastModifiedDate { get; set; }
    
        /// <summary>Optional list of additional identifiers that can be supplied with the submission.</summary>
        [Newtonsoft.Json.JsonProperty("additionalIdentifiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdditionalIdentifiers AdditionalIdentifiers { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CommonISWCMetadata 
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        /// <summary>Indicator of ISWC being preferred or provisional</summary>
        [Newtonsoft.Json.JsonProperty("iswcStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IswcStatus { get; set; }
    
        /// <summary>A CISAC code of a submitting agency that allocated this ISWC</summary>
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency { get; set; }
    
        /// <summary>Original title of a musical composition</summary>
        [Newtonsoft.Json.JsonProperty("originalTitle", Required = Newtonsoft.Json.Required.Always)]
        public string OriginalTitle { get; set; }
    
        /// <summary>Other titles associated with musical composition (aka alternative titles)</summary>
        [Newtonsoft.Json.JsonProperty("otherTitles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Title> OtherTitles { get; set; }
    
        /// <summary>Interested party associated with musical composition, such as :composers, lyricist, translator, original and sub publishers</summary>
        [Newtonsoft.Json.JsonProperty("interestedParties", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.Generic.List<InterestedParty> InterestedParties { get; set; } = new System.Collections.Generic.List<InterestedParty>();
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CommonSystemAttributes 
    {
        /// <summary>Data and time of creation in the system</summary>
        [Newtonsoft.Json.JsonProperty("createdDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; }
    
        /// <summary>Data and time of the latest update in the system</summary>
        [Newtonsoft.Json.JsonProperty("lastModifiedDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastModifiedDate { get; set; }
    
        /// <summary>Identifier of the last update in the system</summary>
        [Newtonsoft.Json.JsonProperty("lastModifiedBy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastModifiedBy { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Rejection 
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        public string Code { get; set; }
    
        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.Always)]
        public string Message { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Title 
    {
        /// <summary>Musical work title</summary>
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.Always)]
        public string Title1 { get; set; }
    
        /// <summary>Musical work title type</summary>
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TitleType Type { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InterestedParty 
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nameNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? NameNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("affiliation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Affiliation { get; set; }
    
        /// <summary>The role will be rolled up to the corresponding CISAC Role as per the following mapping: C(C,A,CA), MA(AR,SR), TA(AD,SA,TR) E(E,AM)</summary>
        [Newtonsoft.Json.JsonProperty("role", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public InterestedPartyRole? Role { get; set; }
    
        [Newtonsoft.Json.JsonProperty("legalEntityType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public InterestedPartyLegalEntityType? LegalEntityType { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Performer 
    {
        [Newtonsoft.Json.JsonProperty("isni", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Isni { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ipn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Ipn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Always)]
        public string LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("designation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PerformerDesignation? Designation { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Instrumentation 
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        public string Code { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DerivedFrom 
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DisambiguateFrom 
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Disambiguation Reason Code</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum DisambiguationReason
    {
        [System.Runtime.Serialization.EnumMember(Value = @"DIT")]
        DIT = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DIA")]
        DIA = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DIE")]
        DIE = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DIC")]
        DIC = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DIP")]
        DIP = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"DIV")]
        DIV = 5,
    
    }
    
    /// <summary>Background, Logo, Theme, Visual or Rolled Up Cue</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum BVLTR
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Background")]
        Background = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Logo")]
        Logo = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Theme")]
        Theme = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Visual")]
        Visual = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RolledUpCue")]
        RolledUpCue = 4,
    
    }
    
    /// <summary>Derived Work Type- if not provided then this isn't a derived work</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum DerivedWorkType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"ModifiedVersion")]
        ModifiedVersion = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excerpt")]
        Excerpt = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Composite")]
        Composite = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TitleAndContributorSearchModel 
    {
        [Newtonsoft.Json.JsonProperty("titles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Title> Titles { get; set; }
    
        [Newtonsoft.Json.JsonProperty("interestedParties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InterestedParty> InterestedParties { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class WorkNumber 
    {
        [Newtonsoft.Json.JsonProperty("agencyCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AgencyCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("agencyWorkCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AgencyWorkCode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MatchingWork 
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        /// <summary>Indicator of ISWC being preferred or provisional</summary>
        [Newtonsoft.Json.JsonProperty("iswcStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IswcStatus { get; set; }
    
        /// <summary>A CISAC code of a submitting agency that allocated this ISWC</summary>
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency { get; set; }
    
        /// <summary>Original title of a musical composition</summary>
        [Newtonsoft.Json.JsonProperty("originalTitle", Required = Newtonsoft.Json.Required.Always)]
        public string OriginalTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workNumbers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<WorkNumber> WorkNumbers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("otherInterestedParties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InterestedParty> OtherInterestedParties { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IPContextSearchModel 
    {
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Always)]
        public string LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nameNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? NameNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dateOfBirth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfBirth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dateOfDeath", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfDeath { get; set; }
    
        [Newtonsoft.Json.JsonProperty("affiliations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Affiliations> Affiliations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Age { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ageTolerance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? AgeTolerance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("works", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Works> Works { get; set; }
    
        [Newtonsoft.Json.JsonProperty("additionalIdentifiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdditionalIdentifiers2 AdditionalIdentifiers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("societyWorkCodes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SocietyWorkCodes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("additionalIPNames", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AdditionalIPNames { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IPContextSearchResponse 
    {
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nameNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? NameNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("matchingIswcs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MatchingWork> MatchingIswcs { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IPContextSearchResponseBatch 
    {
        /// <summary>A unique identifier for this request. The same identifier will be populated for the ISWC Metadata request in the response.</summary>
        [Newtonsoft.Json.JsonProperty("searchId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SearchId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("searchResult", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPContextSearchResponse SearchResult { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rejection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rejection Rejection { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LinkedIswcs 
    {
        [Newtonsoft.Json.JsonProperty("linkedReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LinkedReason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("iswcMetadata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ISWCMetadata IswcMetadata { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MultipleAgencyWorkCodes 
    {
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string WorkCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rejection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rejection Rejection { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum CommonSubmissionAttributesCategory
    {
        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"INT")]
        INT = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AdditionalIdentifiers 
    {
        [Newtonsoft.Json.JsonProperty("isrcs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> Isrcs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("publisherIdentifiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PublisherIdentifiers> PublisherIdentifiers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("agencyWorkCodes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AgencyWorkCodes> AgencyWorkCodes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("labelIdentifiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<LabelIdentifiers> LabelIdentifiers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recordings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Recordings> Recordings { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum TitleType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"CT")]
        CT = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OT")]
        OT = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"RT")]
        RT = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AT")]
        AT = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ET")]
        ET = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ST")]
        ST = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TO")]
        TO = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OA")]
        OA = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TE")]
        TE = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"FT")]
        FT = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"IT")]
        IT = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TT")]
        TT = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PT")]
        PT = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"OL")]
        OL = 13,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AL")]
        AL = 14,
    
        [System.Runtime.Serialization.EnumMember(Value = @"MA")]
        MA = 15,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TA")]
        TA = 16,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum InterestedPartyRole
    {
        [System.Runtime.Serialization.EnumMember(Value = @"CA")]
        CA = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AR")]
        AR = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SE")]
        SE = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"PA")]
        PA = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"ES")]
        ES = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AM")]
        AM = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SA")]
        SA = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AD")]
        AD = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = @"E")]
        E = 10,
    
        [System.Runtime.Serialization.EnumMember(Value = @"AQ")]
        AQ = 11,
    
        [System.Runtime.Serialization.EnumMember(Value = @"SR")]
        SR = 12,
    
        [System.Runtime.Serialization.EnumMember(Value = @"TR")]
        TR = 13,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum InterestedPartyLegalEntityType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"L")]
        L = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum PerformerDesignation
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Main Artist")]
        Main_Artist = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Other")]
        Other = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Affiliations 
    {
        [Newtonsoft.Json.JsonProperty("affiliation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Affiliation { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Works 
    {
        [Newtonsoft.Json.JsonProperty("iswc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Iswc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("titles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Title> Titles { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workCodes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<WorkNumber> WorkCodes { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AdditionalIdentifiers2 
    {
        [Newtonsoft.Json.JsonProperty("isrcs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> Isrcs { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PublisherIdentifiers 
    {
        [Newtonsoft.Json.JsonProperty("nameNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? NameNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("submitterCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubmitterCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> WorkCode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AgencyWorkCodes 
    {
        [Newtonsoft.Json.JsonProperty("agency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string WorkCode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LabelIdentifiers 
    {
        [Newtonsoft.Json.JsonProperty("submitterDPID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubmitterDPID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("workCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> WorkCode { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Recordings 
    {
        [Newtonsoft.Json.JsonProperty("isrc", Required = Newtonsoft.Json.Required.Always)]
        public string Isrc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("recordingTitle", Required = Newtonsoft.Json.Required.Always)]
        public string RecordingTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("subTitle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("labelName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LabelName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("releaseEmbargoDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReleaseEmbargoDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("performers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Performer> Performers { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.28.0 (Newtonsoft.Json v11.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108